{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://h9fs3g3xml.execute-api.us-east-1.amazonaws.com/Production"
    }
  ],
  "tags": [
    {
      "name": "customers"
    },
    {
      "name": "Customer"
    },
    {
      "name": "account"
    },
    {
      "name": "accounts"
    },
    {
      "name": "Account"
    },
    {
      "name": "customer-risk"
    },
    {
      "name": "customer"
    },
    {
      "name": "Transactions"
    },
    {
      "name": "Accounts"
    },
    {
      "name": "transactions"
    },
    {
      "name": "transaction"
    }
  ],
  "paths": {
    "/customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "1",
              "externalDocs": {
                "description": "",
                "url": ""
              }
            }
          }
        ],
        "externalDocs": {
          "url": "",
          "description": ""
        },
        "operationId": "Customer",
        "description": "Retrieve a single customer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "description": "",
                    "summary": "Example_1",
                    "value": {
                      "id": 1,
                      "name": "Gerald Richards",
                      "username": "geraldrichards",
                      "gender": "MALE",
                      "email": "teamsdemo+gerald@rapidapi.com",
                      "mobile_phone_number": "13092128101",
                      "date_of_birth": "01/12/1997",
                      "address": "164 Townsend St #5 San Francisco, CA 94110",
                      "credit_rating": "500",
                      "credit_source": "EQUIFAX",
                      "marital_status": "SINGLE",
                      "employment_status": "EMPLOYED"
                    }
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "examples": {
                  "New Example": {
                    "description": "",
                    "summary": "New Example",
                    "value": {
                      "message": "Missing Authentication Token"
                    }
                  }
                },
                "schema": {
                  "key1": "value",
                  "key2": "value"
                }
              }
            },
            "description": ""
          },
          "502": {
            "content": {
              "application/json": {
                "examples": {
                  "New Example": {
                    "description": "",
                    "summary": "New Example",
                    "value": {
                      "messages": "The API is unreachable, please contact the API provider",
                      "info": "Your Client (working) ---> Gateway (working) ---> API (not working)"
                    }
                  }
                },
                "schema": {
                  "key1": "value",
                  "key2": "value"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "employment_status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "EMPLOYED,UNEMPLOYED"
            }
          },
          {
            "name": "credit_source",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "gender",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "marital_status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SINGLE,MARRIED"
            }
          },
          {
            "name": "credit_rating",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "mobile_phone_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "+19998887777"
            }
          },
          {
            "name": "date_of_birth",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "01/01/2020"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "example@rapidapi.com"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "example_user"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "Gerald"
            }
          },
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2 Shaw Alley, Floor 4, San Francisco, CA 95105"
            }
          }
        ],
        "externalDocs": {
          "url": "",
          "description": ""
        },
        "operationId": "/customer",
        "description": "Update or create a customer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "description": "",
                    "summary": "Example_1",
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID of the customer to delete",
            "schema": {
              "type": "number",
              "default": "1"
            }
          }
        ],
        "externalDocs": {
          "url": "",
          "description": ""
        },
        "description": "Delete a customer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "description": "",
                    "summary": "Example_1",
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "employment_status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "EMPLOYED,UNEMPLOYED"
            }
          },
          {
            "name": "credit_rating",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "credit_source",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "marital_status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SINGLE,MARRIED"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "date_of_birth",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "01/01/2020"
            }
          },
          {
            "name": "mobile_phone_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "+19998887777"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "example_user"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "example@rapidapi.com"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "Gerald"
            }
          },
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2 Shaw Alley, Floor 4, San Francisco, CA 95105"
            }
          }
        ],
        "description": "Create a new customer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "5"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "0"
            }
          }
        ],
        "operationId": "Accounts",
        "description": "Get a list of accounts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      }
    },
    "/customer-risk": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "CA"
            }
          },
          {
            "name": "first_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "+19998887777"
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "zip",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "94105"
            }
          },
          {
            "name": "social_security",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "street_address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2 Shaw Alley, Floor 4"
            }
          },
          {
            "name": "city",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "San Francisco"
            }
          },
          {
            "name": "employment_status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "gross_annual_income",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": 100000
            }
          },
          {
            "name": "net_worth",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "75000"
            }
          },
          {
            "name": "date_of_birth",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "operationId": "Customer Risk",
        "description": "Retrieve the risk associated with a customer based on the input information",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      }
    },
    "/transaction": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "query",
            "required": true,
            "description": "ID of the transaction",
            "schema": {
              "type": "number",
              "default": 2
            }
          }
        ],
        "operationId": "Transaction",
        "description": "Get a single transaction",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      }
    },
    "/account": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "balance",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "283"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "Gerald's Checking"
            }
          },
          {
            "name": "owner",
            "in": "query",
            "required": true,
            "description": "customer_id of the owner of this account",
            "schema": {
              "type": "string",
              "default": "2"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "USD"
            }
          }
        ],
        "externalDocs": {
          "url": "",
          "description": ""
        },
        "operationId": "/account",
        "description": "Create a new account for a customer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "description": "",
                    "summary": "Example_1",
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "2"
            }
          }
        ],
        "description": "Delete an account for a customer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "1"
            }
          }
        ],
        "externalDocs": {
          "url": "",
          "description": ""
        },
        "description": "Retrieve a single account for a customer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "description": "",
                    "summary": "Example_1",
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "5"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "2"
            }
          }
        ],
        "operationId": "Transactions",
        "description": "Retrieve a list of trans",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "2"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "0"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "5"
            }
          }
        ],
        "operationId": "Customers",
        "description": "Retrieve a list of customers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      }
    },
    "/Account": {
      "patch": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "owner",
            "in": "query",
            "required": true,
            "description": "customer_id of the owner of this account",
            "schema": {
              "type": "string",
              "default": "2"
            }
          },
          {
            "name": "balance",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": "283"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "Gerald's Checking"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "USD"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "default": 0
            }
          }
        ],
        "externalDocs": {
          "url": "",
          "description": ""
        },
        "operationId": "Account",
        "description": "Update or create a new account for a customer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Example_1": {
                    "description": "",
                    "summary": "Example_1",
                    "value": {}
                  }
                },
                "schema": {}
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "info": {
    "title": "Customer",
    "version": "1.1.0",
    "description": "Use this API to Create and Manage Customers, Customer Addresses, and Customer Groups. ",
    "x-category": "Customers",
    "x-long-description": "Use this API to Create and Manage Customers, Customer Addresses, and Customer Groups. Additionally, validate customer passwords.",
    "x-website": "",
    "x-public": true,
    "x-thumbnail": "https://rapidapi-prod-apis.s3.amazonaws.com/422ba755-3dd6-4b3b-9023-a109137b11b0.png",
    "x-version-lifecycle": "active",
    "x-badges": [
      {
        "name": "API Type",
        "value": "REST"
      },
      {
        "name": "Deployment",
        "value": "Production"
      },
      {
        "name": "Region",
        "value": "Global"
      }
    ],
    "x-collections": [
      "Customer Onboarding Process",
      "Trending APIs"
    ]
  },
  "components": {
    "schemas": {}
  },
  "x-gateways": [],
  "x-documentation": {
    "readme": "#### The better the documentation, the more adoption and usage of the API!\n\n##### Content currently shows examples of what is possible.\n\n---\n- __[pica](https://nodeca.github.io/pica/demo/)__ - high quality and fast image resize in browser.\n- __[babelfish](https://github.com/nodeca/babelfish/)__ - developer-friendly\n  i18n with plurals support and easy syntax.\n\nYou will like those projects! \n\n---\n\n# h1 Heading 8-)\n## h2 Heading\n### h3 Heading\n#### h4 Heading\n##### h5 Heading\n###### h6 Heading\n\n\n## Horizontal Rules\n\n___\n\n---\n\n***\n\n\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n\n## Emphasis\n\n**This is bold text**\n\n__This is bold text__\n\n*This is italic text*\n\n_This is italic text_\n\n~~Strikethrough~~\n\n\n## Blockquotes\n\n\n&gt; Blockquotes can also be nested...\n&gt;&gt; ...by using additional greater-than signs right next to each other...\n&gt; &gt; &gt; ...or with spaces between arrows.\n\n\n## Lists\n\nUnordered\n\n+ Create a list by starting a line with `+`, `-`, or `*`\n+ Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    + Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n+ Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n\n1. You can use sequential numbers...\n1. ...or keep all the numbers as `1.`\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n\n## Code\n\nInline `code`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\n\nBlock code \"fences\"\n\n```\nSample text here...\n```\n\nSyntax highlighting\n\n``` js\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n```\n\n## Tables\n\n| Option | Description |\n| ------ | ----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nRight aligned columns\n\n| Option | Description |\n| ------:| -----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n\n## Links\n\n[link text](http://dev.nodeca.com)\n\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\n\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\n\n\n## Images\n\n![Minion](https://octodex.github.com/images/minion.png)\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\n\nLike links, Images also have a footnote style syntax\n\n![Alt text][id]\n\nWith a reference later in the document defining the URL location:\n\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\n\n\n## Plugins\n\nThe killer feature of `markdown-it` is very effective support of\n[syntax plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin).\n\n\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\n\n&gt; Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\n&gt;\n&gt; Shortcuts (emoticons): :-) :-( 8-) ;)\n\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\n\n\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\n\n- 19^th^\n- H~2~O\n\n\n### [\\](https://github.com/markdown-it/markdown-it-ins)\n\n++Inserted text++\n\n\n### [\\](https://github.com/markdown-it/markdown-it-mark)\n\n==Marked text==\n\n\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\n\nFootnote 1 link[^first].\n\nFootnote 2 link[^second].\n\nInline footnote^[Text of inline footnote] definition.\n\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n\n    and multiple paragraphs.\n\n[^second]: Footnote text.\n\n\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\n\nTerm 1\n\n:   Definition 1\nwith lazy continuation.\n\nTerm 2 with *inline markup*\n\n:   Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n\n\n### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)\n\nThis is HTML abbreviation example.\n\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\n\n*[HTML]: Hyper Text Markup Language\n\n### [Custom containers](https://github.com/markdown-it/markdown-it-container)\n\n::: warning\n*here be dragons*\n:::\n",
    "tutorials": [
      {
        "title": "Getting Started Guide",
        "description": "---\n__Getting Started :)__\n\n- __[pica](https://nodeca.github.io/pica/demo/)__ - high quality and fast image\n  resize in browser.\n- __[babelfish](https://github.com/nodeca/babelfish/)__ - developer friendly\n  i18n with plurals support and easy syntax.\n\nYou will like those projects!\n\n---\n\n# h1 Heading 8-)\n## h2 Heading\n### h3 Heading\n#### h4 Heading\n##### h5 Heading\n###### h6 Heading\n\n\n## Horizontal Rules\n\n___\n\n---\n\n***\n\n\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n\n## Emphasis\n\n**This is bold text**\n\n__This is bold text__\n\n*This is italic text*\n\n_This is italic text_\n\n~~Strikethrough~~\n\n\n## Blockquotes\n\n\n> Blockquotes can also be nested...\n>> ...by using additional greater-than signs right next to each other...\n> > > ...or with spaces between arrows.\n\n\n## Lists\n\nUnordered\n\n+ Create a list by starting a line with `+`, `-`, or `*`\n+ Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    + Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n+ Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n\n1. You can use sequential numbers...\n1. ...or keep all the numbers as `1.`\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n\n## Code\n\nInline `code`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\n\nBlock code \"fences\"\n\n```\nSample text here...\n```\n\nSyntax highlighting\n\n``` js\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n```\n\n## Tables\n\n| Option | Description |\n| ------ | ----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nRight aligned columns\n\n| Option | Description |\n| ------:| -----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n\n## Links\n\n[link text](http://dev.nodeca.com)\n\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\n\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\n\n\n## Images\n\n![Minion](https://octodex.github.com/images/minion.png)\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\n\nLike links, Images also have a footnote style syntax\n\n![Alt text][id]\n\nWith a reference later in the document defining the URL location:\n\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\n\n\n## Plugins\n\nThe killer feature of `markdown-it` is very effective support of\n[syntax plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin).\n\n\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\n\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\n>\n> Shortcuts (emoticons): :-) :-( 8-) ;)\n\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\n\n\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\n\n- 19^th^\n- H~2~O\n\n\n### [\\](https://github.com/markdown-it/markdown-it-ins)\n\n++Inserted text++\n\n\n### [\\](https://github.com/markdown-it/markdown-it-mark)\n\n==Marked text==\n\n\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\n\nFootnote 1 link[^first].\n\nFootnote 2 link[^second].\n\nInline footnote^[Text of inline footnote] definition.\n\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n\n    and multiple paragraphs.\n\n[^second]: Footnote text.\n\n\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\n\nTerm 1\n\n:   Definition 1\nwith lazy continuation.\n\nTerm 2 with *inline markup*\n\n:   Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n\n\n### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)\n\nThis is HTML abbreviation example.\n\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\n\n*[HTML]: Hyper Text Markup Language\n\n### [Custom containers](https://github.com/markdown-it/markdown-it-container)\n\n::: warning\n*here be dragons*\n:::\n",
        "link": "https://drupaldemo.gwu.edu/sites/g/files/zaxdzs2736/f/downloads/Demo_Started_1920x400.jpg"
      },
      {
        "title": "Advanced Use Cases",
        "description": "---\n__Advanced Use Cases :)__\n\n- __[pica](https://nodeca.github.io/pica/demo/)__ - high quality and fast image\n  resize in browser.\n- __[babelfish](https://github.com/nodeca/babelfish/)__ - developer friendly\n  i18n with plurals support and easy syntax.\n\nYou will like those projects!\n\n---\n\n# h1 Heading 8-)\n## h2 Heading\n### h3 Heading\n#### h4 Heading\n##### h5 Heading\n###### h6 Heading\n\n\n## Horizontal Rules\n\n___\n\n---\n\n***\n\n\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n\n## Emphasis\n\n**This is bold text**\n\n__This is bold text__\n\n*This is italic text*\n\n_This is italic text_\n\n~~Strikethrough~~\n\n\n## Blockquotes\n\n\n> Blockquotes can also be nested...\n>> ...by using additional greater-than signs right next to each other...\n> > > ...or with spaces between arrows.\n\n\n## Lists\n\nUnordered\n\n+ Create a list by starting a line with `+`, `-`, or `*`\n+ Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    + Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n+ Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n\n1. You can use sequential numbers...\n1. ...or keep all the numbers as `1.`\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n\n## Code\n\nInline `code`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\n\nBlock code \"fences\"\n\n```\nSample text here...\n```\n\nSyntax highlighting\n\n``` js\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n```\n\n## Tables\n\n| Option | Description |\n| ------ | ----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nRight aligned columns\n\n| Option | Description |\n| ------:| -----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n\n## Links\n\n[link text](http://dev.nodeca.com)\n\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\n\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\n\n\n## Images\n\n![Minion](https://octodex.github.com/images/minion.png)\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\n\nLike links, Images also have a footnote style syntax\n\n![Alt text][id]\n\nWith a reference later in the document defining the URL location:\n\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\n\n\n## Plugins\n\nThe killer feature of `markdown-it` is very effective support of\n[syntax plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin).\n\n\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\n\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\n>\n> Shortcuts (emoticons): :-) :-( 8-) ;)\n\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\n\n\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\n\n- 19^th^\n- H~2~O\n\n\n### [\\](https://github.com/markdown-it/markdown-it-ins)\n\n++Inserted text++\n\n\n### [\\](https://github.com/markdown-it/markdown-it-mark)\n\n==Marked text==\n\n\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\n\nFootnote 1 link[^first].\n\nFootnote 2 link[^second].\n\nInline footnote^[Text of inline footnote] definition.\n\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n\n    and multiple paragraphs.\n\n[^second]: Footnote text.\n\n\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\n\nTerm 1\n\n:   Definition 1\nwith lazy continuation.\n\nTerm 2 with *inline markup*\n\n:   Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n\n\n### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)\n\nThis is HTML abbreviation example.\n\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\n\n*[HTML]: Hyper Text Markup Language\n\n### [Custom containers](https://github.com/markdown-it/markdown-it-container)\n\n::: warning\n*here be dragons*\n:::\n",
        "link": "https://healthitanalytics.com/images/site/article_headers/_normal/Policy_and_Regulation.jpg"
      }
    ],
    "spotlights": [
      {
        "title": "How to configure RBAC",
        "description": "How to configure Roles-based Access Control on RapidAPI [Enterprise Hub]",
        "link": "https://www.youtube.com/watch?v=146lWEN4Brg&list=PLh0D7DkM5FfBcCB1VoNNXAtQgVtG5JMnI"
      },
      {
        "title": "OpenAPI File",
        "description": "Customer API OpenAPI specification",
        "link": "https://github.com/RapidAPI"
      },
      {
        "title": "How Companies Create Customer Experiences With APIs",
        "description": "How Companies Create Customer Experiences With APIs",
        "link": "https://www.youtube.com/watch?v=69F6xLGoWv8"
      }
    ]
  },
  "x-rapidapi-info": {
    "apiVersionId": "apiversion_1b84770f-873b-429d-ac88-f919489908ac",
    "apiId": "api_209c4806-f58b-4a75-9adf-3396325cd7ef"
  }
}
